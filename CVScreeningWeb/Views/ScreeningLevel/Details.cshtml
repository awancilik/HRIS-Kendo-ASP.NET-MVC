@using CVScreeningWeb.Helpers
@using CVScreeningWeb.Resources
@using Kendo.Mvc.UI
@model CVScreeningWeb.ViewModels.ScreeningLevel.ScreeningLevelFormViewModel

@{
    ViewBag.Title = Common.DetailTitle + " " + ScreeningLevel.Object;
    ViewBag.PanelClass = CSSHelper.SINGLE_COLUMN_FORM_CLASS;
}

@Html.ValidationSummary()



<div class="form-horizontal">
    <fieldset>

            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ContractReference).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class=@CSSHelper.INPUT_DIV_CLASS>
                    @Html.Bootstrap().TextBoxFor(m => m.ContractReference).Class("form-control").Readonly()
                    @Html.ValidationMessageFor(m => m.ContractReference)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ContractYear).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class=@CSSHelper.INPUT_DIV_CLASS>
                    @Html.Bootstrap().TextBoxFor(m => m.ContractYear).Class("form-control").Readonly()
                    @Html.ValidationMessageFor(m => m.ContractYear)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.ScreeningLevelName).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class=@CSSHelper.INPUT_DIV_CLASS>
                    @Html.Bootstrap().TextBoxFor(m => m.ScreeningLevelName).Class("form-control").Readonly()
                    @Html.ValidationMessageFor(m => m.ScreeningLevelName)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Description).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class=@CSSHelper.INPUT_DIV_CLASS>
                    @Html.Bootstrap().TextAreaFor(m => m.Description).Class("form-control").Readonly()
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.StartDate).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class="col-md-3">
                    @(Html.Kendo().DatePickerFor(m => m.StartDate)
                          .Format("dd/MM/yyyy")
                          )
                    @Html.ValidationMessageFor(m => m.StartDate)
                </div>
                @Html.Bootstrap().LabelFor(m => m.EndDate).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class="col-md-3">
                    @(Html.Kendo().DatePickerFor(m => m.EndDate)
                          .Format("dd/MM/yyyy")
                          )
                    @Html.ValidationMessageFor(m => m.EndDate)
                </div>
            </div>
        <div class="form-group">
            @Html.Bootstrap().LabelFor(m => m.TurnaroundTime).Class(CSSHelper.LABEL_CONTROL_CLASS)
            <div class=@CSSHelper.INPUT_DIV_CLASS>
                @Html.Bootstrap().TextBoxFor(m => m.TurnaroundTime).Class("form-control").Readonly()
                @Html.ValidationMessageFor(m => m.TurnaroundTime)
            </div>
        </div>
        <div class="form-group">
            @Html.Bootstrap().LabelFor(m => m.AllowedToContact).Class(CSSHelper.LABEL_CONTROL_CLASS)
            <div class=@CSSHelper.INPUT_DIV_CLASS>
                @Html.Bootstrap().CheckBoxFor(m => m.AllowedToContact).Readonly()
                @Html.ValidationMessageFor(m => m.AllowedToContact)
            </div>
        </div>
            @Html.DisplayFor(m => m.AllowedToContactCurrentCompany)
            <div class="form-group">
                @Html.Bootstrap().LabelFor(m => m.Language).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class=@CSSHelper.INPUT_DIV_CLASS>
                    @(Html.Kendo().DropDownListFor(m => m.Language)
                          .HtmlAttributes(new {@class = "form-control", required = "required"})
                          .BindTo(new List<string>
                          {
                              "Bahasa Indonesia",
                              "English"
                          }
                          ))
                    @Html.ValidationMessageFor(m => m.Language)
                </div>
            </div>
            <div class="form-group">
                @Html.Bootstrap().Label(ScreeningLevel.TypeOfChecks).Class(CSSHelper.LABEL_CONTROL_CLASS)
                <div class="col-md-1">

                </div>
                <div class="col-md-6">
                    <label class="col-md-12 control-label" style="text-align: center" for="@ScreeningLevel.Comments">
                        Comments
                    </label>
                </div>
            </div>


        @for (var i = 0; i < Model.TypeOfChecks.Count; i++)
        {
            <div class="row">
                <div class="form-group">
                    @Html.Bootstrap().Label(Model.TypeOfChecks[i].TypeOfCheckBox.Text).Class(CSSHelper.LABEL_CONTROL_CLASS)
                    <div class="col-md-1">
                        @Html.CheckBoxFor(m => m.TypeOfChecks[i].TypeOfCheckBox.Checked)
                        @Html.HiddenFor(m => m.TypeOfChecks[i].TypeOfCheckId)
                    </div>
                    <div class="col-md-8">
                        @Html.Bootstrap().TextBoxFor(m => m.TypeOfChecks[i].TypeOfCheckScreeningComments).Class("form-control").Readonly()
                    </div>
                </div>
            </div>
        }
        

        <div>@Html.HiddenFor(m => m.ContractId)</div>

        <br />
        <br />
        <div class="form-group">
            <div class="col-lg-offset-3 col-lg-8">
                @Html.ActionLink(Common.Ok, "Index", "ScreeningLevel", new { id = Model.ContractId }, new { Class = "btn  btn-default" })
            </div>
        </div>
    </fieldset>
</div>



@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

}