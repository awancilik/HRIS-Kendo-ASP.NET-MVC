@using CVScreeningWeb.Resources
@using Kendo.Mvc.UI
@model IEnumerable<CVScreeningWeb.ViewModels.ClientAccount.ClientAccountManageViewModel>

@{
    ViewBag.Title = Common.ManageTitle + " " + ClientAccount.Object;
    ViewBag.IsKendoEnabled = true;

    // Page size settings and numbering
    const int initPageSize = 10;
    int page = !String.IsNullOrEmpty(Request.QueryString["Grid-page"]) ? Int32.Parse(Request.QueryString["Grid-page"]) : 1;
    int pageSize = !String.IsNullOrEmpty(Request.QueryString["Grid-pageSize"]) ? Int32.Parse(Request.QueryString["Grid-pageSize"]) : initPageSize;
    int number = (page - 1) * pageSize;
}

@(Html.Kendo().Grid(Model)
      .Name("Grid")
      .Columns(columns =>
      {
          columns.Bound(e => e.Id).Template(@<div class="right">
            @{ number = number + 1; }
            @number
        </div>)
              .Title(Common.Id).Width(30);
          columns.Bound(e => e.Email).Width(120);
          columns.Bound(e => e.FullName).Width(170);
          columns.Bound(e => e.Company).Width(100);
          columns.Bound(e => e.Position).Width(100);
          columns.Bound(e => e.IsDeactivated).Width(100);
          columns.Bound(e => e.Id).Template(@<div class="btn-group dropup">
                                                 <button type="button" class="btn btn-sm btn-default dropdown-toggle" data-toggle="dropdown">
                                                      <i class="fa fa-gear"></i>
                                                 </button>
                                                 <ul class="action-dropdown dropdown-menu dropdown-menu-content" role="menu">
                                                     <li>@Html.ActionLink(Common.Detail, "Detail", "ClientAccount", new {id = @item.Id}, null)</li>
                                                     <li>@Html.ActionLink(Common.Edit, "Edit", "ClientAccount", new {id = @item.Id}, null)</li>
                                                     @if (!item.IsDeactivated)
                                                     {
                                                         <li>@Html.ActionLink(Account.Deactivate, "Deactivate", "ClientAccount", 
                                                         new {id = @item.Id},  new {confirmPrompt = Account.DeactivateConfirmation})</li>
                                                     }
                                                     else
                                                     {
                                                         <li>@Html.ActionLink(Account.Reactivate, "Activate", "ClientAccount", 
                                                         new { id = @item.Id },  new {confirmPrompt = Account.ReactivateConfirmation})</li>
                                                     }
                                                     <li>@Html.ActionLink(Account.ResetPassword, "ResetPassword", "Account", new {id = @item.Id}, null)</li>
                                                 </ul>
                                             </div>).Title("").Width(30);
      })
      .Pageable()
      .Sortable()
      .Filterable()
      .Scrollable(scr => scr.Height("auto"))
      .DataSource(dataSource => dataSource
          .Server()
          .Model(model => model.Id(p => p.Id))
      ))
<br />
@Html.ActionLink(Common.CreateNew, "Create", "ClientAccount", null, new {Class = "btn  btn-default"})

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}