<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{B1904638-19DB-4071-941A-755131B07CF4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CVScreeningService.Tests</RootNamespace>
    <AssemblyName>CVScreeningService.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Label="SlowCheetah">
    <SlowCheetahToolsPath>$([System.IO.Path]::GetFullPath( $(MSBuildProjectDirectory)\..\packages\SlowCheetah.2.5.10.6\tools\))</SlowCheetahToolsPath>
    <SlowCheetah_EnableImportFromNuGet Condition=" '$(SC_EnableImportFromNuGet)'=='' ">true</SlowCheetah_EnableImportFromNuGet>
    <SlowCheetah_NuGetImportPath Condition=" '$(SlowCheetah_NuGetImportPath)'=='' ">$([System.IO.Path]::GetFullPath( $(MSBuildProjectDirectory)\Properties\SlowCheetah\SlowCheetah.Transforms.targets ))</SlowCheetah_NuGetImportPath>
    <SlowCheetahTargets Condition=" '$(SlowCheetah_EnableImportFromNuGet)'=='true' and Exists('$(SlowCheetah_NuGetImportPath)') ">$(SlowCheetah_NuGetImportPath)</SlowCheetahTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug.TST|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug.TST\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release.TST|AnyCPU'">
    <OutputPath>bin\Release.TST\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Castle.Core">
      <HintPath>..\packages\Castle.Core.3.0.0.4001\lib\net40-client\Castle.Core.dll</HintPath>
    </Reference>
    <Reference Include="FakeItEasy">
      <HintPath>..\packages\FakeItEasy.1.21.0\lib\net40\FakeItEasy.dll</HintPath>
    </Reference>
    <Reference Include="Ninject, Version=3.0.0.0, Culture=neutral, PublicKeyToken=c7192dc5380945e7, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Ninject.3.0.1.10\lib\net45-full\Ninject.dll</HintPath>
    </Reference>
    <Reference Include="Ninject.Extensions.Interception, Version=3.0.0.0, Culture=neutral, PublicKeyToken=c7192dc5380945e7, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Ninject.Extensions.Interception.3.0.0.8\lib\net45-full\Ninject.Extensions.Interception.dll</HintPath>
    </Reference>
    <Reference Include="Ninject.Extensions.Interception.DynamicProxy">
      <HintPath>..\packages\Ninject.Extensions.Interception.DynamicProxy.3.0.0.8\lib\net45-full\Ninject.Extensions.Interception.DynamicProxy.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework, Version=2.6.3.13283, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <HintPath>..\packages\NUnit.2.6.3\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Web.Helpers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Web.WebPages, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="WebMatrix.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <EmbedInteropTypes>False</EmbedInteropTypes>
      <Private>True</Private>
    </Reference>
    <Reference Include="WebMatrix.WebData, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <EmbedInteropTypes>False</EmbedInteropTypes>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="IntegrationTest\UserManagement\ClientAccount.Tests.cs" />
    <Compile Include="IntegrationTest\UserManagement\Password.Tests.cs" />
    <Compile Include="IntegrationTest\UserManagement\Authentication.Tests.cs" />
    <Compile Include="IntegrationTest\UserManagement\Role.Tests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="IntegrationTest\UserManagement\Account.Tests.cs" />
    <Compile Include="UnitTest\Client\ClientContract.Tests.cs" />
    <Compile Include="UnitTest\Client\ClientCompany.Tests.cs" />
    <Compile Include="UnitTest\Client\ClientContactPerson.Tests.cs" />
    <Compile Include="UnitTest\Client\ClientScreeningLevel.Tests.cs" />
    <Compile Include="UnitTest\Common\ContactPerson.Tests.cs" />
    <Compile Include="UnitTest\Common\ContactInfo.Tests.cs" />
    <Compile Include="UnitTest\Common\Location.Tests.cs" />
    <Compile Include="UnitTest\Common\Address.Tests.cs" />
    <Compile Include="IntegrationTest\UserManagement\UserLeave.Tests.cs" />
    <Compile Include="UnitTest\Dispatching\Aggregated.Tests.cs" />
    <Compile Include="UnitTest\Dispatching\Assignement.Tests.cs" />
    <Compile Include="UnitTest\Dispatching\Availibility.Tests.cs" />
    <Compile Include="UnitTest\Dispatching\Geographical.Tests.cs" />
    <Compile Include="UnitTest\Dispatching\Workload.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\CertificationPlaceLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\CompanyLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\CourtLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\DrivingLicenseOfficeLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\FacultyLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\HighSchoolLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\PopulationOfficelookUpDataBaseService.Tests.cs" />
    <Compile Include="UnitTest\Notification\Notification.Tests.cs" />
    <Compile Include="UnitTest\Permission\Permission.Tests.cs" />
    <Compile Include="UnitTest\Screening\ScreeningDate.Tests.cs" />
    <Compile Include="UnitTest\Screening\Status.Tests.cs" />
    <Compile Include="UnitTest\Screening\AtomicCheck.Tests.cs" />
    <Compile Include="UnitTest\Screening\Qualification.Tests.cs" />
    <Compile Include="UnitTest\Screening\Screening.Tests.cs" />
    <Compile Include="UnitTest\UserManagement\PublicHoliday.Tests.cs" />
    <Compile Include="UnitTest\UserManagement\UserLeave.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\ImmigrationOfficeLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\PoliceLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\ProfessionalQualificationService.Tests.cs" />
    <Compile Include="UnitTest\LookUpDatabase\UniversityLookUpDatabaseService.Tests.cs" />
    <Compile Include="UnitTest\Utilities.Tests.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="App.config">
      <SubType>Designer</SubType>
      <TransformOnBuild>true</TransformOnBuild>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <None Include="App.Debug.config">
      <DependentUpon>App.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="App.Debug.TST.config">
      <DependentUpon>App.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="App.Release.config">
      <DependentUpon>App.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="App.Release.TST.config">
      <DependentUpon>App.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="NLog.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <TransformOnBuild>true</TransformOnBuild>
    </None>
    <None Include="NLog.Debug.config">
      <DependentUpon>NLog.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="NLog.Debug.TST.config">
      <DependentUpon>NLog.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="NLog.Release.config">
      <DependentUpon>NLog.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="NLog.Release.TST.config">
      <DependentUpon>NLog.config</DependentUpon>
      <IsTransformFile>True</IsTransformFile>
    </None>
    <None Include="NLog.xsd">
      <SubType>Designer</SubType>
    </None>
    <None Include="NUnit.CVScreeningService.Tests.nunit">
      <SubType>Designer</SubType>
    </None>
    <None Include="packages.config">
      <TransformOnBuild>true</TransformOnBuild>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <SubType>Designer</SubType>
    </None>
    <None Include="Properties\SlowCheetah\SlowCheetah.Transforms.targets" />
    <Compile Include="UnitTest\Dispatching\Skill.Tests.cs" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\CVScreeningCore\CVScreeningCore.csproj">
      <Project>{45a46e67-589e-414a-aeb5-120ab7c29cdf}</Project>
      <Name>CVScreeningCore</Name>
    </ProjectReference>
    <ProjectReference Include="..\CVScreeningDAL\CVScreeningDAL.csproj">
      <Project>{5b5d87db-b33b-41d4-8371-45bc9f2192a4}</Project>
      <Name>CVScreeningDAL</Name>
    </ProjectReference>
    <ProjectReference Include="..\CVScreeningService\CVScreeningService.csproj">
      <Project>{6a46d3a8-80b0-44d7-98b6-c1ad5a6b1c11}</Project>
      <Name>CVScreeningService</Name>
    </ProjectReference>
    <ProjectReference Include="..\Nalysa.Common\Nalysa.Common.csproj">
      <Project>{226fd1c1-669f-4428-aaad-cba0a9d08f0a}</Project>
      <Name>Nalysa.Common</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="NUnit.CVScreeningService.Tests.VisualState.xml" />
    <Content Include="TestResult.xml" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SlowCheetahTargets)" Condition="Exists('$(SlowCheetahTargets)')" Label="SlowCheetah" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>